{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cACxB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAuBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAKD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACtB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAa,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHAO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAEIqB,EDbuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAQpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,8CAAf,SACSH,EAAOJ,KAAK,SAAAC,GACT,OAAO,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEStBgB,EA3BM,SAAAC,GAErB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMI,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MChBzC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cfc1843c.chunk.js","sourcesContent":["import React ,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory =({setCategories}) =>{\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=> {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=> {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length> 2){\r\n            setCategories((cat)=> [inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category)=> {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mh3q7115lAtW4yFXALZnSgmkYcGrD7X5`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs=data.map(img=> {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem= ({title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={url} alt={title}/>\r\n         <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading}= useFetchGifs(category);\r\n   /* const [images, setImages] = useState([])\r\n    useEffect(() => {\r\n        getGifs(category)//es una promesa\r\n            .then(img => setImages(img))\r\n    },[category])//reeact nos obliga a ponerlos como dependecia ya k piensa\r\n                //que podria cambiar el valor, y si pasara  eso se volveria a renderizar el componente\r\n    */\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {images.map( img => {\r\n                    return <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    }) ;\r\n\r\n    useEffect (()=> {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n        })\r\n    },[category])\r\n\r\n    return state;\r\n}","import React ,{useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\nconst [categories, setCategories] = useState(['One punch']);\r\n\r\n/*const handleAdd =()=> {\r\n    setCategories([...categories, 'holk']);\r\n    //setCategories(cat=> [...cat, 'hulk'])\r\n}*/\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        return <GifGrid\r\n                                    key={category}\r\n                                    category={category}\r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}